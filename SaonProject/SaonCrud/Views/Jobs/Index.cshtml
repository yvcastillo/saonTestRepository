@*@model IEnumerable<Saon.Entities.Job>*@
@model PaginatedList<Saon.Entities.Job>

@{
    ViewData["Title"] = "Index";
}

@*<h1>Index</h1>*@

@*<p>
            <a asp-action="Create" class="btn btn-primary">Create New</a>
    </p>*@

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <a asp-action="Create" class="btn btn-primary">Create New</a>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead class="table-dark">
        <tr>
            <th>
                @*@Html.DisplayNameFor(model => model.JobTitle)*@
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Title</a>
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Description)*@
                Description
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.CreatedAt)*@
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">CreatedAt</a>
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.ExpiredAt)*@
                ExpiredAt
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.JobTitle)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedAt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ExpiredAt)
                </td>
                <td>
                    <div class="btn-group btn-group-sm" role="group">
                        <a asp-action="Edit" asp-route-id="@item.IdJob" class="btn btn-secondary">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.IdJob" class="btn btn-secondary">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.IdJob" class="btn btn-secondary">Delete</a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

