// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Saon.DataAccess;

namespace Saon.DataAccess.Migrations
{
    [DbContext(typeof(TestContext))]
    partial class TestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Saon.Entities.Job", b =>
                {
                    b.Property<int>("IdJob")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("IdJob");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            IdJob = 1,
                            CreatedAt = new DateTime(2020, 5, 25, 16, 22, 9, 13, DateTimeKind.Local).AddTicks(9752),
                            Description = "Descripcion about .net developer",
                            ExpiredAt = new DateTime(2020, 6, 24, 16, 22, 9, 15, DateTimeKind.Local).AddTicks(183),
                            JobTitle = ".NET Developer"
                        },
                        new
                        {
                            IdJob = 2,
                            CreatedAt = new DateTime(2020, 5, 25, 16, 22, 9, 15, DateTimeKind.Local).AddTicks(662),
                            Description = "Descripcion about QA Analyst",
                            ExpiredAt = new DateTime(2020, 6, 24, 16, 22, 9, 15, DateTimeKind.Local).AddTicks(676),
                            JobTitle = ".QA Analyst"
                        },
                        new
                        {
                            IdJob = 3,
                            CreatedAt = new DateTime(2020, 5, 25, 16, 22, 9, 15, DateTimeKind.Local).AddTicks(691),
                            Description = "Descripcion about Solution Architec",
                            ExpiredAt = new DateTime(2020, 6, 24, 16, 22, 9, 15, DateTimeKind.Local).AddTicks(692),
                            JobTitle = "Solution Architec"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
